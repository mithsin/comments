{"version":3,"sources":["components/utils.js","components/CommentBox.jsx","components/CommentForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["moment","require","formatDate","date","pastDate","format","isItWithinAWeek","subtract","startOf","isAfter","calendar","CommentBox","comment","id","name","created","message","role","tabIndex","className","CommentForm","comments","setComments","useState","formInputs","setformInputs","nameError","setNameError","messageError","setMessageError","formInputChange","e","target","value","type","maxLength","onChange","onFocus","placeholder","onClick","axios","post","then","res","concat","catch","err","App","useEffect","get","data","console","log","delete","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac48b5df.chunk.js","sourcesContent":["const moment = require('moment');\r\nexport const formatDate = (date) => {\r\n    const pastDate = moment(date).format(\"YYYY-MM-DD\")\r\n    const isItWithinAWeek = moment().subtract(7, 'days').startOf('day');\r\n    const isWithinAWeek = (momentDate) => {\r\n        return moment(momentDate).isAfter(isItWithinAWeek);\r\n    }\r\n    return isWithinAWeek(pastDate) ? moment(date).calendar() : (`${moment(date).format(\"MMM Do\")} at ${moment(date).format(\"h:mm a\")}`);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDate } from './utils';\r\nimport './styles.scss';\r\n\r\nconst CommentBox = ({comment}) => {\r\n    const {\r\n        id,\r\n        name,\r\n        created,\r\n        message\r\n    } = comment;\r\n    \r\n    return (\r\n        <div \r\n            id={id} \r\n            role=\"comment\"\r\n            tabIndex=\"0\"\r\n            className=\"CommentBox-Wrapper\" \r\n            >\r\n            <div className=\"CommentBox-Message\">\r\n                {message}\r\n            </div>\r\n            <div className=\"CommentBox-Date\">\r\n                {`${name} on ${formatDate(created)}`}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentBox.propTypes = {\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    created: PropTypes.string,\r\n    message: PropTypes.string,\r\n};\r\n\r\nexport default CommentBox;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.scss';\r\n\r\nconst CommentForm = ({comments, setComments}) => {\r\n    const [formInputs, setformInputs] = useState({\r\n        name: '',\r\n        message: ''\r\n    });\r\n    const [nameError, setNameError] = useState(false);\r\n    const [messageError, setMessageError] = useState(false);\r\n\r\n    const formInputChange = (e) => {\r\n        setformInputs({\r\n            ...formInputs,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    const onSubmitComment = () => {\r\n        if(!formInputs.name) setNameError(true);\r\n        if(!formInputs.message) setMessageError(true);\r\n        if(formInputs.name && formInputs.message) {\r\n            axios.post(`/createComment`, formInputs)\r\n                .then(res => {\r\n                    setComments(comments.concat(formInputs));\r\n                    setformInputs({\r\n                        name: '',\r\n                        message: ''\r\n                    });\r\n                })\r\n                .catch(err => err);\r\n        }\r\n    };\r\n    return (\r\n        <div id=\"comment-form\" \r\n            className=\"CommentForm-Wrapper\" \r\n            >\r\n            <p><b>Name</b></p>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                maxLength=\"50\"\r\n                value={formInputs.name}\r\n                onChange={formInputChange} \r\n                onFocus={()=>setNameError(false)}\r\n                placeholder={nameError && \"Name is empty\"}\r\n                />\r\n            \r\n            <textarea \r\n                type=\"text\" \r\n                className=\"CommentForm-Textarea\" \r\n                name=\"message\"\r\n                maxLength=\"200\"\r\n                value={formInputs.message}\r\n                onChange={formInputChange} \r\n                onFocus={()=>setMessageError(false)}\r\n                placeholder={messageError && \"Message is empty\"}\r\n                />\r\n            <input type=\"submit\" value=\"Comment\" onClick={onSubmitComment}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentForm;","import React, { useState, useEffect } from \"react\";\nimport CommentBox from 'components/CommentBox';\nimport CommentForm from 'components/CommentForm';\nimport axios from 'axios';\nimport './App.scss';\n\nfunction App() {\n  const [comments, setComments] = useState([]);\n    useEffect(()=>{\n      axios.get(`/getComments`)\n      .then(res => {\n        setComments(res.data) })\n      .catch(err => console.log(err))\n    },[])\n\n  const onDeleteAll = () => {\n    axios.delete(`/deleteComments`)\n      .then(res => \n        setComments([]) )\n      .catch(err => console.log(err))\n  };\n  return (\n    <div className=\"App\">\n        <div className=\"CommentsWrapper\">\n          <button onClick={onDeleteAll}>Delete All</button>\n          <CommentForm comments={comments} setComments={setComments}/>\n          {comments?.map((comment, index) => \n            <CommentBox key={`comment-${index}`} comment={comment}/>\n          )}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}